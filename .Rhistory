labs(title=expression("PM"[2.5]*" Coal Combustion Source Emissions Across US from 1999-2008"))
library(ggplot2)
ggp <- ggplot(combustionNEI,aes(factor(year),Emissions/10^5)) +
geom_bar(stat="identity",fill="grey",width=0.75) +
theme_bw() +  guides(fill=FALSE) +
labs(x="year", y=expression("Total PM"[2.5]*" Emission (10^5 Tons)")) +
labs(title=expression("PM"[2.5]*" Coal Combustion Source Emissions Across US from 1999-2008"))
print(ggp)
ds <- readRDS("summarySCC_PM25.rds")
sc <- readRDS("Source_Classification_Code.rds")
coal <- grepl("coal", sc$SCC.Level.Four, ignore.case=TRUE)
combustion <- grepl("comb", sc$SCC.Level.One, ignore.case=TRUE)
both <- (combustion & coal)
combSC <- sc[both,]$sc
ds4 <- ds[ds$SCC %in% combSC,]
png("plot4.png")
ggplot(ds4,aes(factor(year),Emissions)) +
geom_bar(stat="identity",fill="grey",width=0.75) +
theme_bw() +  guides(fill=FALSE) +
labs(x="year", y=expression("Total PM"[2.5]*" Emission (10^5 Tons)")) +
labs(title=expression("PM"[2.5]*" Coal Combustion Source Emissions Across US from 1999-2008"))
dev.off()
head(ds)
head(combSC)
head(combustionSCC)
head(coal)
head(coalRelated)
head(combustionRelated)
head(combustion)
head(coalCombustion)
head(both)
head(combSC)
head(combustionSCC)
combSC <- sc[both,]$SCC
ds4 <- ds[ds$SCC %in% combSC,]
png("plot4.png")
ggplot(ds4,aes(factor(year),Emissions)) +
geom_bar(stat="identity",fill="grey",width=0.75) +
theme_bw() +  guides(fill=FALSE) +
labs(x="year", y=expression("Total PM"[2.5]*" Emission (10^5 Tons)")) +
labs(title=expression("PM"[2.5]*" Coal Combustion Source Emissions Across US from 1999-2008"))
dev.off()
ggplot(ds4,aes(factor(year),Emissions)) +
geom_bar(stat="identity",fill="grey") +
theme_bw() +  guides(fill=FALSE) +
labs(x="year", y=expression("Total PM"[2.5]*" Emission (10^5 Tons)")) +
labs(title=expression("PM"[2.5]*" Coal Combustion Source Emissions Across US from 1999-2008"))
png("plot4.png")
ggplot(ds4,aes(factor(year),Emissions)) +
geom_bar(stat="identity",fill="grey") +
theme_bw() +  guides(fill=FALSE) +
labs(x="year", y=expression("Total PM"[2.5]*" Emission (10^5 Tons)")) +
labs(title=expression("PM"[2.5]*" Coal Combustion Source Emissions Across US from 1999-2008"))
dev.off()
ggplot(ds4,aes(factor(year),Emissions)) +
geom_bar(stat="identity",fill="blue") +
theme_bw() +  guides(fill=FALSE) +
labs(x="year", y=expression("Total PM"[2.5]*" Emission (10^5 Tons)")) +
labs(title=expression("PM"[2.5]*" Coal Combustion Source Emissions Across US from 1999-2008"))
png("plot4.png")
ggplot(ds4,aes(factor(year),Emissions)) +
geom_bar(stat="identity",fill="blue") +
theme_bw() +  guides(fill=FALSE) +
labs(x="year", y=expression("Total PM"[2.5]*" Emission (10^5 Tons)")) +
labs(title=expression("PM"[2.5]*" Coal Combustion Source Emissions Across US from 1999-2008"))
dev.off()
png("plot4.png")
ggplot(ds4,aes(factor(year),Emissions)) +
geom_bar(stat="identity") +
theme_bw() +  guides(fill=FALSE) +
labs(x="year", y=expression("Total PM"[2.5]*" Emission (10^5 Tons)")) +
labs(title=expression("PM"[2.5]*" Coal Combustion Source Emissions Across US from 1999-2008"))
dev.off()
png("plot4.png")
ggplot(ds4,aes(factor(year),Emissions)) +
geom_bar(stat="identity") +
theme_bw() +  guides(fill=FALSE) +
labs(x="year", y=expression("Total PM"[2.5]*" Emission (10^5 Tons)")) +
labs(title=expression("PM"[2.5]*" Coal Combustion Source Emissions Across US from 1999-2008"))
dev.off()
png("plot4.png")
ggplot(ds4,aes(factor(year),Emissions)) +
geom_bar(stat="identity") +  guides(fill=FALSE) +
labs(x="year", y=expression("Total PM"[2.5]*" Emission (10^5 Tons)")) +
labs(title=expression("PM"[2.5]*" Coal Combustion Source Emissions Across US from 1999-2008"))
dev.off()
png("plot4.png")
ggplot(ds4,aes(factor(year),Emissions/1e6)) +
geom_bar(stat="identity") +  guides(fill=FALSE) +
labs(x="year", y=expression("Total PM"[2.5]*" Emission [million tons]")) +
labs(title=expression("PM"[2.5]*" Coal Combustion Source Emissions Across US from 1999-2008"))
dev.off()
png("plot4.png")
ggplot(ds4,aes(factor(year),Emissions/1e3)) +
geom_bar(stat="identity") +  guides(fill=FALSE) +
labs(x="year", y=expression("Total PM"[2.5]*" Emission [thousand tons]")) +
labs(title=expression("PM"[2.5]*" Coal Combustion Source Emissions Across US from 1999-2008"))
dev.off()
png("plot4.png")
ggplot(ds4,aes(factor(year),Emissions/1e3)) +
geom_bar(stat="identity") +  guides(fill=FALSE) +
labs(x="year", y="Emission [thousand tons]") +
labs(title="PM2.5 emissions from coal combustion sources by year")
dev.off()
#5 Emissions from motor vehicle sources Baltimore
vehicles <- grepl("vehicle", sc$SCC.Level.Two, ignore.case=TRUE)
vehiclesSC <- sc[vehicles,]$sc
vehiclesSC <- sc[veh,]$sc
#5 Emissions from motor vehicle sources Baltimore
veh <- grepl("vehicle", sc$SCC.Level.Two, ignore.case=TRUE)
vehiclesSC <- sc[veh,]$sc
head(vehiclesSC)
vehiclesSC <- sc[veh,]$SCC
head(vehiclesSC)
vehiclesDS <- ds[ds$SCC %in% vehiclesSC,]
balt5 <- vehiclesDS[vehiclesDS$fips==24510,]
png("plot5.png")
ggplot(ds5,aes(factor(year),Emissions/1e3)) +
geom_bar(stat="identity") +  guides(fill=FALSE) +
labs(x="year", y="Emission [thousand tons]") +
labs(title="PM2.5 emissions from coal combustion sources by year")
ggplot(balt5,aes(factor(year),Emissions/1e3)) +
geom_bar(stat="identity") +  guides(fill=FALSE) +
labs(x="year", y="Emission [thousand tons]") +
labs(title="PM2.5 emissions from coal combustion sources by year")
dev.off()
ggplot(balt5,aes(factor(year),Emissions)) +
geom_bar(stat="identity") +  guides(fill=FALSE) +
labs(x="year", y="Emission [tons]") +
labs(title="PM2.5 emissions from coal combustion sources by year")
png("plot5.png")
ggplot(balt5,aes(factor(year),Emissions)) +
geom_bar(stat="identity") +  guides(fill=FALSE) +
labs(x="year", y="Emission [tons]") +
labs(title="PM2.5 emissions from coal combustion sources in Baltimore, years 1999-2008")
dev.off()
png("plot5.png")
ggplot(balt5,aes(factor(year),Emissions)) +
geom_bar(stat="identity", fill="green") +  guides(fill=FALSE) +
labs(x="year", y="Emission [tons]") +
labs(title="PM2.5 emissions from coal combustion sources in Baltimore, years 1999-2008")
dev.off()
png("plot4.png")
ggplot(ds4,aes(factor(year),Emissions/1e3)) +
geom_bar(stat="identity", fill="0072B2") +  guides(fill=FALSE) +
labs(x="year", y="Emission [thousand tons]") +
labs(title="PM2.5 emissions from coal combustion sources by year")
ggplot(ds4,aes(factor(year),Emissions/1e3)) +
geom_bar(stat="identity", fill="#0072B2") +  guides(fill=FALSE) +
labs(x="year", y="Emission [thousand tons]") +
labs(title="PM2.5 emissions from coal combustion sources by year")
dev.off()
png("plot4.png")
ggplot(ds4,aes(factor(year),Emissions/1e3)) +
geom_bar(stat="identity", fill="#0072B2") +  guides(fill=FALSE) +
labs(x="year", y="Emission [thousand tons]") +
labs(title="PM2.5 emissions from coal combustion sources by year")
dev.off()
png("plot4.png")
ggplot(ds4,aes(factor(year),Emissions/1e3)) +
geom_bar(stat="identity", fill="green") +  guides(fill=FALSE) +
labs(x="year", y="Emission [thousand tons]") +
labs(title="PM2.5 emissions from coal combustion sources by year")
dev.off()
la6 <- vehiclesDS[vehiclesDS$fips==06037,]
png("plot6.png")
ggplot(balt5,aes(factor(year),Emissions, color="fips")) +
geom_bar(stat="identity", fill="green") +  guides(fill=FALSE) +
labs(x="year", y="Emission [tons]") +
labs(title="PM2.5 emissions from coal combustion sources in Baltimore, years 1999-2008")
dev.off()
png("plot6.png")
ggplot(balt5,aes(factor(year),Emissions, color="fips")) +
geom_bar(stat="identity", fill="green") +  guides(fill=FALSE) +
facet_grid(. ~ fips) +
labs(x="year", y="Emission [tons]") +
labs(title="PM2.5 emissions from coal combustion sources in Baltimore, years 1999-2008")
dev.off()
balt5$city <- "Baltimore"
la6$city <- "Los Angeles"
la6 <- vehiclesDS[vehiclesDS$fips==06037,]
la6$city <- "Los Angeles"
head(la6)
head(vehiclesSC)
vehiclesDS <- ds[ds$SCC %in% vehiclesSC,]
balt5 <- vehiclesDS[vehiclesDS$fips==24510,]
balt5$city <- "Baltimore"
la6 <- vehiclesDS[vehiclesDS$fips==06037,]
head(la6)
la6 <- vehiclesDS[vehiclesDS$fips=="06037",]
head(la6)
la6$city <- "Los Angeles"
png("plot6.png")
dev.off()
laAndBalt <- rbind(balt5,la6)
head(laAndBalt)
tail(laAndBalt)
png("plot6.png")
ggplot(laAndBalt,aes(factor(year),Emissions, color="fips")) +
geom_bar(stat="identity", fill="green") +  guides(fill=FALSE) +
facet_grid(. ~ fips) +
labs(x="year", y="Emission [tons]") +
labs(title="PM2.5 emissions from coal combustion sources in Baltimore, years 1999-2008")
dev.off()
png("plot6.png")
ggplot(laAndBalt,aes(x=factor(year), y=Emissions, color="fips")) +
geom_bar(stat="identity") +  guides(fill=FALSE) +
facet_grid(. ~ city) +
labs(x="year", y="Emission [tons]") +
labs(title="PM2.5 emissions from coal combustion sources in Baltimore and Los Angeles")
dev.off()
png("plot6.png")
ggplot(laAndBalt,aes(x=factor(year), y=Emissions, color=year)) +
geom_bar(stat="identity") +  guides(fill=FALSE) +
facet_grid(. ~ city) +
labs(x="year", y="Emission [tons]") +
labs(title="PM2.5 emissions from coal combustion sources in Baltimore and Los Angeles")
dev.off()
png("plot6.png")
ggplot(laAndBalt,aes(x=factor(year), y=Emissions/1e3, color=fips)) +
geom_bar(stat="identity") +  guides(fill=FALSE) +
facet_grid(. ~ city) +
labs(x="year", y="Emission [thousand tons]") +
labs(title="PM2.5 emissions from coal combustion sources in Baltimore and Los Angeles")
dev.off()
png("plot6.png")
ggplot(laAndBalt,aes(x=factor(year), y=Emissions/1e3)) +
geom_bar(stat="identity") +  guides(fill=FALSE) +
facet_grid(. ~ city) +
labs(x="year", y="Emission [thousand tons]") +
labs(title="PM2.5 emissions from coal combustion sources in Baltimore and Los Angeles")
dev.off()
png("plot6.png")
ggplot(laAndBalt,aes(x=factor(year), y=Emissions/1e3, fill=city)) +
geom_bar(stat="identity") +  guides(fill=FALSE) +
facet_grid(. ~ city) +
labs(x="year", y="Emission [thousand tons]") +
labs(title="PM2.5 emissions from coal combustion sources in Baltimore and Los Angeles")
dev.off()
knitr::opts_chunk$set(echo = TRUE)
read.csv("activity.csv")
setwd("~/2019 Data Science Coursera/5 Reproducible Research")
read.csv("activity.csv")
getwd()
unz("activity.zip")
unz("activity.zip", "activity.csv")
data <- read.csv(unz("activity.zip", "activity.csv"), header=T)
head(data)
rawData <- read.csv(unz("activity.zip", "activity.csv"), header=T)
head(rawData)
tail(rawData)
class(rawData)
rawData <- read.csv(unz("activity.zip", "activity.csv"), header=T)
head(rawData)
means <- apply(rawData, 2, mean)
data[,1] <- as.numeric(data[,1])
data <- rawData
data[,1] <- as.numeric(data[,1])
means <- apply(data, 2, mean)
means <- apply(data, 2, mean)
#Calculate the total number of steps taken per day
means <- cbind(data$steps, data$date)
head(means)
head(data)
class(data$date)
rawData <- read.csv(unz("activity.zip", "activity.csv"), header=T, stringsAsFactors = FALSE)
head(rawData)
class(data$date)
data <- rawData
class(data$date)
data$date <- as.Date(data$date, "%Y-%m-%d")
class(data$date)
head(data)
class(data)
#Calculate the total number of steps taken per day
means <- data[,c(2,3)]
head(means)
means <- apply(means, 2, mean)
#Calculate the total number of steps taken per day
means <- data[,c(2,3)]
means <- means[by == unique(by)[1]]
dates <- unque(means$date)
dates <- unique(means$date)
head(dates)
class(dates)
s <- split(data, data$date)
lapply(s, mean)
#Calculate the total number of steps taken per day
means <- data[,c(1,2)]
s <- split(data, data$date)
lapply(s, function(x) colMeans(means[,c("")]))
head(means)
lapply(s, function(x) colMeans(means[,c("steps")]))
dailySteps <- s[, c(lapply(s, sum, na.rm = TRUE)), c("steps"), by = .(date)]
head(rawData)
data <- as.data.table(rawData)
dailySteps <- s[, c(lapply(sum, na.rm = TRUE)), c("steps"), by = .(date)]
dailySteps <- s[, c(lapply(s, sum, na.rm = TRUE)), c("steps"), by = .(date)]
head(s)
#Calculate the total number of steps taken per day
head(data)
s <- data[,c(1,2)]
head(s)
for (d in dates){
print(paste("The year is", d))
}
dates <- unique(s$date)
for (d in dates){
print(paste("The year is", d))
}
class(dates)
s <- unique(s$date)
s <- unique(data$date)
head(s)
length(dates)
dailySteps <- 1:length(dates)
head(dailySteps)
dailySteps <- vector()
head(dailySteps)
dailySteps <- integer()
head(dailySteps)
dailySteps <- integer()
i <- 1
for (d in dates){
#print(paste("The year is", d))
subs <- data[(data$date==d),]
dailySteps[i] <- sum(subs$steps, na.rm = TRUE)
}
head(dailySteps)
dailySteps[i,0] <- sum(subs$steps, na.rm = TRUE)
for (d in dates){
#print(paste("The year is", d))
subs <- data[(data$date==d),]
dailySteps[i,0] <- sum(subs$steps, na.rm = TRUE)
}
for (d in dates){
#print(paste("The year is", d))
subs <- data[(data$date==d),]
dailySteps[1] <- sum(subs$steps, na.rm = TRUE)
}
for (d in dates){
#print(paste("The year is", d))
subs <- data[(data$date==d),]
dailySteps[i] <- sum(subs$steps, na.rm = TRUE)
i <- i + 1
}
head(dailySteps)
cbind(s,dailySteps)
head(s)
daily <- integer()
i <- 1
for (d in dates){
#print(paste("The year is", d))
subs <- data[(data$date==d),]
daily[i] <- sum(subs$steps, na.rm = TRUE)
i <- i + 1
}
head(daily)
dailySteps <- cbind(s,dailySteps)
head(dailySteps)
class(dailySteps$date)
class(dailySteps)
dailySteps <- as.data.frame(cbind(s,dailySteps))
head(dailySteps)
head(dailySteps)
head(s)
for (d in dates){
#print(paste("The year is", d))
subs <- data[(data$date==d),]
daily[i] <- sum(subs$steps, na.rm = TRUE)
i <- i + 1
}
dailySteps <- as.data.frame(cbind(s,daily))
head(dailySteps)
class(dailySteps)
head(dailySteps, 10)
View(dailySteps)
View(dailySteps)
class(s)
dateCol <- unique(data$date)
head(dateCol)
class(dateCol)
stepCol <- integer()
stepCol <- integer()
i <- 1
for (d in dateCol){
#print(paste("The year is", d))
subs <- data[(data$date==d),]
stepCol[i] <- sum(subs$steps, na.rm = TRUE)
i <- i + 1
}
head(stepCol)
dailySteps <- as.data.frame(cbind(dateCol,stepCol))
head(dailySteps, 10)
head(dateCol)
View(dailySteps)
dailySteps <- cbind.data.frame(dateCol,stepCol))
dailySteps <- cbind.data.frame(dateCol,stepCol)
head(s)
head(dailySteps)
View(dailySteps)
#Make a histogram of the total number of steps taken each day
ggplot(dailySteps, aes(x=stepsCol))
#Make a histogram of the total number of steps taken each day
library(ggplot2)
ggplot(dailySteps, aes(x=stepsCol))
ggplot(dailySteps, aes(x=stepCol))
ggplot(dailySteps, aes(x=dateCol))
colNames(dailySteps) <- c("date", "steps")
dailySteps <- setNames(dailySteps, c("date", "steps"))
head(dailySteps)
ggplot(dailySteps, aes(x=steps))
qplot(dailySteps)
ggplot(dailySteps, aes(x=steps))
ggplot(dailySteps$steps)
ggplot(dailySteps$steps, aes(dailySteps$date))
ggplot(dailySteps$steps, aes(dailySteps$steps))
ggplot(dailySteps, aes(dailySteps$steps))
ggplot(dailySteps, aes(dailySteps$steps)) + geom_histogram()
ggplot(dailySteps, aes(dailySteps$steps)) + geom_histogram(na.rm=TRUE)
ggplot(dailySteps, aes(dailySteps$steps)) + geom_histogram(na.rm=TRUE)
ggplot(dailySteps, aes(dailySteps$steps)) + geom_histogram(na.rm=TRUE)
ggplot(dailySteps, aes(dailySteps$steps)) + geom_histogram(na.rm=TRUE, binwidth = 1000)
ggplot(dailySteps, aes(dailySteps$steps)) + geom_histogram(na.rm=TRUE, binwidth = 1000) +
xlab("Number of daily steps")
ggplot(dailySteps, aes(dailySteps$steps)) + geom_histogram(na.rm=TRUE, binwidth = 1000) +
xlab("Number of daily steps") + ylab("Number of days")
ggplot(dailySteps, aes(dailySteps$steps)) + geom_histogram(na.rm=TRUE, binwidth = 1000) +
xlab("Number of daily steps") + ylab("Frequency")
ggplot(dailySteps, aes(dailySteps$steps)) + geom_histogram(na.rm=TRUE, binwidth = 1000) +
xlab("Number of daily steps") + ylab("Frequency") +
ggtitle("Steps per day")
ggplot(dailySteps, aes(dailySteps$steps)) + geom_histogram(na.rm=TRUE, binwidth = 1000, color="purple") +
xlab("Number of daily steps") + ylab("Frequency") +
ggtitle("Steps per day")
ggplot(dailySteps, aes(dailySteps$steps)) + geom_histogram(na.rm=TRUE, binwidth = 1000, fill="purple") +
xlab("Number of daily steps") + ylab("Frequency") +
ggtitle("Steps per day")
ggplot(dailySteps, aes(dailySteps$steps)) + geom_histogram(na.rm=TRUE, binwidth = 1000, color="blue", fill="purple") +
xlab("Number of daily steps") + ylab("Frequency") +
ggtitle("Steps per day")
View(dailySteps)
meanSteps <- mean(dailySteps$steps)
meanSteps
meanSteps <- mean(dailySteps$steps, na.rm = TRUE)
meanSteps
View(dailySteps)
medianSteps <- median(dailySteps$steps, na.rm = TRUE)
knitr::opts_chunk$set(echo = TRUE)
paste("Mean number of steps per day: ", meanSteps)
paste("Mean number of steps per day:", meanSteps)
paste("Median number of steps per day:", medianSteps)
paste("Median number of steps per day:", round(medianSteps,2))
paste("Mean number of steps per day:", round(meanSteps),2)
paste("Mean number of steps per day:", round(meanSteps,2))
timeIntervalAvgSteps <- aggregate( list(meanNumberSteps=data$steps), by=list(interval=data$interval), mean, na.rm=TRUE)
timeIntervalAvgSteps
xlab("Interval (5 minutes)") +
ylab("Steps")
ggplot(timeIntervalAvgSteps, aes(interval, meanNumberSteps)) +
geom_line() +
title("Average Daily Activity Pattern") +
xlab("Interval (5 minutes)") +
ylab("Steps")
ggplot(timeIntervalAvgSteps, aes(interval, meanNumberSteps)) +
geom_line() +
title("Average Daily Activity Pattern") +
xlab("Interval (5 minutes)") +
ylab("Steps")
#Make a histogram of the total number of steps taken each day
library(ggplot2)
ggplot(timeIntervalAvgSteps, aes(interval, meanNumberSteps)) +
geom_line() +
ggtitle("Average Daily Activity Pattern") +
xlab("Interval (5 minutes)") +
ylab("Steps")
ggplot(timeIntervalAvgSteps, aes(interval, meanNumberSteps)) +
geom_line() +
ggtitle("Average Daily Activity Pattern") +
xlab("Interval (5 minutes)") +
ylab("Steps") + color("green")
ggplot(timeIntervalAvgSteps, aes(interval, meanNumberSteps)) +
geom_line() +
ggtitle("Average Daily Activity Pattern") +
xlab("Interval (5 minutes)") +
ylab("Steps") + color("green")
ggplot(timeIntervalAvgSteps, aes(interval, meanNumberSteps)) +
geom_line() +
ggtitle("Average Daily Activity Pattern") +
xlab("Interval (5 minutes)") +
ylab("Steps") + color="green"
ggplot(timeIntervalAvgSteps, aes(interval, meanNumberSteps)) +
geom_line(color="green") +
ggtitle("Average Daily Activity Pattern") +
xlab("Interval (5 minutes)") +
ylab("Steps")
ggplot(timeIntervalAvgSteps, aes(interval, meanNumberSteps)) +
geom_line(color="purple") +
ggtitle("Average Daily Activity Pattern") +
xlab("Interval (5 minutes)") +
ylab("Steps")
head(timeIntervalAvgSteps)
max(timeIntervalAvgSteps$meanNumberSteps)
paste("Mean number of steps per day:", round(max(timeIntervalAvgSteps$meanNumberSteps),0))
pos_max <- which.max(timeIntervalAvgSteps$meanNumberSteps)
pos_max
timeIntervalAvgSteps$interval[pos_max]
x <- timeIntervalAvgSteps$interval[pos_max]
x
head(timeIntervalAvgSteps)
maxAvgStepsInterval <- timeIntervalAvgSteps$interval[pos_max]
paste("The 5 minute time interval with the maximum number of average steps:", maxAvgStepsInterval)
